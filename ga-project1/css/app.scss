@charset 'utf-8';
// =====================================================
// Font-Stacks
// =====================================================
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;800&family=Raleway:wght@200;400");
$raleway-font: ("Raleway", sans-serif);
$opensans-font: ("Open Sans", sans-serif);

// =====================================================
// Color Scheme:
// =====================================================

$darkest-blue: #4a5680;
$medium-blue: #7689cc;
$lighest-blue: #e0e7ff;
$grey: #707480;

// =====================================================
// small element variables
// =====================================================

$box-shadow: 2px 2px 5px rgba($color: #000000,
    $alpha: 0.5,
);
$inset-box-shadow: inset 2px 2px 4px rgba($color: #000000,
    $alpha: 0.3,
);
$border: 0.3vw solid $grey;

// ===============================================
// Placeholder Selectors and Mixins for Common Elements
// ===============================================

// breakpoint for responsive design

@mixin breakpoint($point) {
    @if $point==lg {
        @media (min-width: 1600px) {
            @content;
        }
    }

    @else if $point==md {
        @media (min-width: 1000px) {
            @content;
        }
    }

    @else if $point==sm {
        @media (min-width: 600px) {
            @content;
        }
    }

    @else if $point==xs {
        @media (max-width: 350px) {
            @content;
        }
    }

    @else {
        @warn "Breakpoint mixin should be: lg, md, or sm.";
    }
}

//sections, divs, positions
@mixin zero-margin-padding {
    margin: 0;
    padding: 0;
}

@mixin flex-styling($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin fill-parent-container {
    object-fit: fill;
    width: 100%;
    height: 100%;
    position: relative;
    box-sizing: border-box;
}

//elements
@mixin button-styling($border-radius, $background-color, $color) {
    border: 1px solid $grey;
    border-radius: $border-radius;
    background-color: $background-color;
    color: $color;
    font-size: 3vw;
    letter-spacing: 0.05vw;
    font-family: $raleway-font;
    box-shadow: $box-shadow;
    outline: none;

    &:hover {
        cursor: pointer;
    }

    &:active {
        box-shadow: $inset-box-shadow;
    }
}

@mixin ul-styling {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

@mixin li-styling($fontsize, $smfontsize) {
    @include breakpoint(sm) {
        font-size: $smfontsize;
    }

    padding: 0.3vh 0 1vh 0;
    font-size: $fontsize;
    font-family: $raleway-font;
}

@mixin a-tag-styling {
    @include breakpoint(sm) {
        font-size: 1.5vw;
    }

    text-decoration: none;
    padding: 0;
    color: white;
    font-size: 2vw;
    font-family: $raleway-font;

    &:hover {
        cursor: pointer;
    }
}

@mixin heading-text-font($size, $lgsize, $color) {
    @include breakpoint(lg) {
        font-size: $lgsize;
    }

    font-family: $opensans-font;
    font-size: $size;
    color: $color;
    letter-spacing: 0.02vw;
}

@mixin p-text-font($color) {
    @include breakpoint(sm) {
        line-height: 5vh;
    }

    @include breakpoint(md) {
        line-height: 7vh;
    }

    @include breakpoint(lg) {
        font-size: 1.5vw;
    }

    font-family: $raleway-font;
    font-size: 3vw;
    letter-spacing: 0.02vw;
    line-height: 3vh;
    text-transform: uppercase;
    color: $color;
    margin: 2% 0;
}

// ===================================================================================
//Mobile First Styling
// ===================================================================================
* {
    box-sizing: border-box;

    &:before,
    &:after {
        box-sizing: border-box;
    }
}

html {
    //height taken from viewport
    height: 100%;
    width: 100%;
}

body {
    @include zero-margin-padding;
    //min-height allows for scrolling of content
    min-height: 100%;
    width: 100%;
    background-color: whitesmoke;
}

.container {
    @include breakpoint(sm) {
        grid-template-rows: 250px 1fr 40px;
    }

    width: 100%;
    display: grid;
    grid-template-rows: 200px 1fr 40px;
    grid-row-gap: 5px;
    grid-template-columns: 20px 1fr 20px;
    grid-template-areas: "header header header"
    ". main ."
    "footer footer footer";


    .about {
        @include flex-styling(column, center, center);
        display: none;
        z-index: 2;
        width: 90%;
        padding: 200px 20px;
        background-color: whitesmoke;
        border: $border;
        box-shadow: $box-shadow;
        position: absolute;
        top: 25%;
        right: 3%;

        >h2 {
            @include heading-text-font(7vw, 5vw, $darkest-blue);
        }

        >p {
            @include p-text-font($grey);
        }

        >button {
            @include button-styling(24px, $grey, #fff);

            @include breakpoint(sm) {
                margin-top: 5vh;
            }

            padding: 2vh 6vw;
            margin: 2vh auto;
        }
    }
}

header {
    @include flex-styling(column, center, center);
    grid-area: header;
    background-color: $darkest-blue;
    color: whitesmoke;


    >h1 {
        @include heading-text-font(7vw, 4vw, #fff);

        @include breakpoint(md) {
            margin-left: 3vw;
        }

    }

    >button {
        @include button-styling(24px, whitesmoke, $darkest-blue);

        @include breakpoint(sm) {
            margin-bottom: 3vh;
        }

        @include breakpoint(md) {
            margin: 0 3vw 0 0;
            font-size: 2vw;
        }

        padding: 1vh 5vw;
    }
}

.main {
    grid-area: main;
    display: grid;
    grid-template-rows: [search] 10vh [dictionary] auto [practice] auto;

}

.search-section {
    width: 99.5%;
    box-sizing: border-box;
    grid-row-start: search;
    grid-row-end: dictionary;

    input[type="text"] {
        @include p-text-font($darkest-blue);
        width: 100%;
        padding: 1vh 0;
        border: $border;

        &::placeholder {
            color: $darkest-blue;
        }

        &:hover,
        &:active {
            cursor: text;
        }
    }
}

.dictionary-entrance {
    grid-row-start: dictionary;
    grid-row-end: practice;
    padding: 2vh 0;

    .errorH2 {
        @include heading-text-font(7vw, 5vw, $darkest-blue);
        text-align: center;
    }

    .wordHolder {
        @include flex-styling(row, space-between, center);

        .vocab {
            @include heading-text-font(6vw, 4vw, $darkest-blue);
            margin: 0;
        }

        >button {
            @include button-styling(50%, $darkest-blue, #fff);
            padding: 3vw;
            margin-right: 4vw;
        }
    }

    .wordType {
        @include p-text-font(#000);
    }

    .definitions {
        .definition {
            @include p-text-font(#000);
        }
    }
}

.practice-list {
    @include flex-styling(column, center, center);
    grid-row-start: practice;
    grid-row-end: flashcard;
    width: 100%;
    box-sizing: border-box;
    padding: 1vh 0;
    margin: 5vh auto;
    background-color: $lighest-blue;

    h2 {
        @include heading-text-font(5vw, 3vw, $darkest-blue);
        width: 100%;
        text-align: center;
    }

    .list-container {
        ul {
            @include ul-styling;
            @include flex-styling(row, center, center);
            flex-wrap: wrap;
            width: 95%;
            margin: auto;
            box-sizing: border-box;

            li {
                @include li-styling(3vw, 3.5vw);
                padding: 0.3vh 1.5vw;
            }
        }
    }
}

.flashcard-section {
    @include flex-styling(row, center, center);
    box-sizing: border-box;
    grid-row: flashcard;
    margin: 5vh auto;
    width: 100%;

    img {
        @include breakpoint(xs) {
            width: 40px;
            height: auto;
        }

        @include breakpoint(sm) {
            width: 80px;
            height: auto;
        }
    }

    .flashcards {
        box-shadow: $box-shadow;

        width: 70%;
        min-width: 200px;
        height: 100%;
        min-height: 150px;
        margin: auto;
        overflow: hidden;
        border: $border;
    }

    .flashcard {
        @include flex-styling(column, center, center);
        @include fill-parent-container;
        display: none;
        background-color: $lighest-blue;
        color: $darkest-blue;
        border: $border;
        padding: 2vh 2vw;
        overflow-y: scroll;

        >h2 {
            @include heading-text-font(5vw, 2.5vw, $darkest-blue);
        }

        .definitiondiv {
            .definition {
                @include p-text-font(#000000);
                font-size: 2vw;
            }
        }

        &:first-of-type {
            display: flex;
        }
    }
}

footer {
    @include flex-styling(row, space-between, center);
    grid-area: footer;
    background-color: $darkest-blue;
    color: white;

    a {
        @include a-tag-styling;
        margin: 0 3vw;
    }

}

//==============================================
// Resources:
// https://css-tricks.com/sass-style-guide/
// https://sass-guidelin.es/
// https://medium.com/@zerox/keep-that-damn-footer-at-the-bottom-c7a921cb9551
// https://dev.to/domysee/keeping-the-footer-at-the-bottom-with-css-flexbox-5h5f?signin=true
// https://medium.com/flexbox-and-grids/how-to-efficiently-master-the-css-grid-in-a-jiffy-585d0c213577
//https://stackoverflow.com/questions/17555682/height-100-or-min-height-100-for-html-and-body-elements
//==============================================